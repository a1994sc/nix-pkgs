name: "auto-magic update packages"
on:
  workflow_dispatch:
  schedule:
    - cron: '15 */6 * * *'
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: cachix/install-nix-action@7be5dee1421f63d07e71ce6e0a9f8a4b07c2a487 # v31.6.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - id: set-matrix
        env:
          PKG_DIR: pkgs/core
        run: |-
          echo "matrix=$(nix flake show --json --all-systems 2>/dev/null | yq -M -pj -oj -I0 '. = ([.packages.x86_64-linux | keys | .[] | select(. != "go-1*")]) | .[] |= {"pkg": .} | {"include": .}')" >> $GITHUB_OUTPUT

  go-lang:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        version:
          - "23"
          - "24"
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: chainguard-dev/actions/setup-gitsign@f632aec66edeebe245ad686a33a0c0a2160cac31 # v1.4.14

      - name: Configure nix, Determinate Systems
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v31.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add cachix actions
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$|.patch$)

      - name: Get latest version
        id: latest-version
        env:
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install --constraint=.github/requirements.txt lastversion
          echo "version=$(python -m lastversion --only '~1.${{ matrix.version }}' https://github.com/golang/go)" >> "$GITHUB_OUTPUT"

      - name: Get latest version of 1.${{ matrix.version }}
        run: |-
          nix run nixpkgs#nix-update -- --flake go-1-${{ matrix.version }} --version ${{ steps.latest-version.outputs.version }}

      - name: Commit & Push changes
        id: commit
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          new_branch: 'update/go-lang-1-${{ matrix.version }}.x'
          message: "chore(pkg): update package go-1-${{ matrix.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_author: github_actions

      - name: Create pull request
        if: ${{ steps.commit.outputs.committed == 'true' }}
        run: gh pr create -B 'main' -H 'update/go-lang-1-${{ matrix.version }}.x' --title 'Update golang 1-${{ matrix.version }}' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request
        if: ${{ steps.commit.outputs.committed == 'true' }}
        run: gh pr merge --auto --delete-branch --merge 'update/go-lang-1-${{ matrix.version }}.x'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  packages:
    needs:
      - setup
      - go-lang
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
      max-parallel: 4
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: chainguard-dev/actions/setup-gitsign@f632aec66edeebe245ad686a33a0c0a2160cac31 # v1.4.14

      - name: Configure nix, Determinate Systems
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v31.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add cachix actions
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$|.patch$)

      - name: Get the url for package ${{ matrix.pkg }}
        id: homepage
        run: |-
          echo "URL=$(nix eval --raw .#packages.x86_64-linux.${{ matrix.pkg }}.meta.homepage)" >> "$GITHUB_OUTPUT"

      - name: Get latest version
        id: latest-version
        run: |
          pip install --constraint=.github/requirements.txt lastversion
          echo "version=$(python -m lastversion ${{ steps.homepage.outputs.URL }})" >> "$GITHUB_OUTPUT"

      - name: Build package with latest version
        if: ${{ steps.latest-version.outputs.version != '' }}
        run: |-
          nix run nixpkgs#nix-update -- --flake ${{ matrix.pkg }} --version ${{ steps.latest-version.outputs.version }}

      - name: Fetch changes
        run: |-
          git pull

      - name: Commit & Push changes
        id: commit
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          new_branch: 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
          message: "chore(pkg): update package ${{ matrix.pkg }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_author: github_actions

      - name: Create pull request
        if: ${{ steps.commit.outputs.committed == 'true' }}
        run: gh pr create -B 'main' -H 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}' --title 'Update ${{ matrix.pkg }}' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request
        if: ${{ steps.commit.outputs.committed == 'true' }}
        id: merge
        continue-on-error: true
        run: gh pr merge --auto --delete-branch --rebase 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebase on main
        if: ${{ steps.merge.outcome == 'failure' }}
        run: |-
          git rebase 'main'

      - name: Merge pull request, rebase
        if: ${{ steps.commit.outputs.committed == 'true' && steps.merge.outcome == 'failure' }}
        continue-on-error: true
        run: gh pr merge --auto --delete-branch --rebase 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
