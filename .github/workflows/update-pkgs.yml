name: "auto-magic update packages"
on:
  workflow_dispatch:
  schedule:
    - cron: '15 */6 * * *'
jobs:
  setup:
    runs-on: ubuntu-latest
    # outputs:
    #   matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # - uses: cachix/install-nix-action@754537aaedb35f72ab11a60cc162c49ef3016495 # v31
      #   with:
      #     nix_path: nixpkgs=channel:nixos-unstable
      #     github_access_token: ${{ secrets.GITHUB_TOKEN }}
      # - id: set-matrix
      #   env:
      #     PKG_DIR: pkgs/core
      #   run: |-
      #     echo "matrix=$(nix flake show --json --all-systems 2>/dev/null | yq -M -p=j -o=j -I=0 '. = (.packages.x86_64-linux | keys) | .[] |= {"pkg": .} | {"include": .}')" >> $GITHUB_OUTPUT

  go-lang:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - "23"
          - "24"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: chainguard-dev/actions/setup-gitsign@d9b7e22c19086f609cfeaea6d3b3e34f7ecc7266 # v1.0.6

      - name: Configure nix
        uses: cachix/install-nix-action@754537aaedb35f72ab11a60cc162c49ef3016495 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add cachix actions
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$)

      - name: Get latest version
        id: latest-version
        run: |
          pip install --constraint=.github/constraints.txt lastversion
          echo "latest_version=$(python -m lastversion --only '~1.${{ matrix.version }}' https://github.com/golang/go)" >> "$GITHUB_OUTPUT"

      - name: Get latest version of 1.${{ matrix.version }}
        run: |-
          nix develop .#ci --command bash -c "nix-update --flake go-1-${{ matrix.version }} --build --version ${{ steps.latest-version.outputs.latest_version }}"

      - name: Commit & Push changes
        uses: actions-js/push@5a7cbd780d82c0c937b5977586e641b2fd94acc5 # v1.5
        with:
          branch: 'main'
          message: "chore(flake): update package go-1-${{ matrix.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # packages:
  #   needs:
  #     - go-lang
  #     - setup
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #       with:
  #         fetch-depth: 0

  #     - uses: chainguard-dev/actions/setup-gitsign@93d7e48486a0ec24d253345d8b5378a5551b7be9 # v1.0.4

  #     - name: Configure nix
  #       uses: cachix/install-nix-action@754537aaedb35f72ab11a60cc162c49ef3016495 # v31
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #         github_access_token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Add cachix actions
  #       uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
  #       with:
  #         name: a1994sc
  #         authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #         pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$)

  #     - name: Get latest version of the package
  #       run: |-
  #         export VER=$(nix develop .#ci --command bash -c "lastversion $(nix eval --raw .#packages.x86_64-linux.${{ matrix.pkg }}.meta.homepage)")
  #         nix develop .#ci --command bash -c "nix-update --flake ${{ matrix.pkg }} --build --version $VER"

  #     - name: Commit & Push changes
  #       uses: actions-js/push@5a7cbd780d82c0c937b5977586e641b2fd94acc5 # v1.5
  #       with:
  #         branch: 'main'
  #         message: "chore(flake): update package ${{ matrix.pkg }}"
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
