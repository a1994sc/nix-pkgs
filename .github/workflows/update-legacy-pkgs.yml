name: "auto-magic update packages, legacy"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: cachix/install-nix-action@f0fe604f8a612776892427721526b4c7cfb23aba # v31.4.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - id: set-matrix
        env:
          PKG_DIR: pkgs/core
        run: |-
          echo "matrix=$(nix flake show --legacy --json 2>/dev/null | yq -M -pj -oj -I=0 '. = ([.legacyPackages.x86_64-linux | keys | .[] | select(test("[^0-9]+$"))]) | .[] |= {"pkg": .} | {"include": .}')" >> $GITHUB_OUTPUT

  packages:
    needs:
      - setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
      max-parallel: 1
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: chainguard-dev/actions/setup-gitsign@4f7ad4fd63a4e1c8c11fdb16d543a3eb651036ca # v1.4.2

      - name: Configure nix
        uses: cachix/install-nix-action@f0fe604f8a612776892427721526b4c7cfb23aba # v31.4.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add cachix actions
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$|.patch$)

      - name: Get the url for package ${{ matrix.pkg }}
        id: homepage
        run: |-
          echo "URL=$(nix eval --raw .#legacyPackages.x86_64-linux.${{ matrix.pkg }}.meta.homepage --accept-flake-config)" >> "$GITHUB_OUTPUT"

      - name: Get latest version
        id: latest-version
        run: |
          pip install --constraint=.github/constraints.txt lastversion
          echo "version=$(python -m lastversion ${{ steps.homepage.outputs.URL }})" >> "$GITHUB_OUTPUT"

      - name: Build package with latest version
        if: ${{ steps.latest-version.outputs.version != '' }}
        run: |-
          nix run nixpkgs#nix-update -- --flake legacyPackages.x86_64-linux.${{ matrix.pkg }} --build --version ${{ steps.latest-version.outputs.version }}

      - name: Fetch changes
        run: |-
          git pull

      - name: Commit & Push changes
        id: commit
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          new_branch: 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
          message: "chore(pkg): update package ${{ matrix.pkg }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_author: github_actions

      - name: Create pull request
        if: ${{ steps.commit.outputs.committed == 'true' }}
        run: gh pr create -B 'main' -H 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}' --title 'Update ${{ matrix.pkg }}' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request, merge
        if: ${{ steps.commit.outputs.committed == 'true' }}
        id: merge
        continue-on-error: true
        run: gh pr merge --auto --delete-branch --merge 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebase on main
        if: ${{ steps.merge.outcome == 'failure' }}
        run: |-
          git rebase 'main'

      - name: Merge pull request, rebase
        if: ${{ steps.commit.outputs.committed == 'true' && steps.merge.outcome == 'failure' }}
        continue-on-error: true
        run: gh pr merge --auto --delete-branch --rebase 'update/${{ matrix.pkg }}-${{ steps.latest-version.outputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
