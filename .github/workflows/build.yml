name: "builds"
on:
  workflow_run:
    workflows:
      - "Update lock"
      - "auto-magic update packages"
    types:
      - completed
  push:
    branches:
      - main
jobs:
  detect-noop:
    runs-on: ubuntu-latest
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          do_not_skip: '["workflow_dispatch", "schedule"]'

  setup:
    needs:
      - detect-noop
    if: needs.detect-noop.outputs.noop != 'true'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - id: set-matrix
        env:
          PKG_DIR: pkgs/core
        run: |-
          echo "matrix=$(nix flake show --json --all-systems 2>/dev/null | yq -M -p=j -o=j -I=0 '. = (.packages.x86_64-linux | keys) | .[] |= {"pkg": .} | {"include": .}')" >> $GITHUB_OUTPUT

  compilers:
    needs:
      - setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        comp:
          - "go-1-23"
          - "go-1-24"
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$)

      - name: Build updated package
        run: |-
          nix build .#${{ matrix.comp }}

  release:
    needs:
      - compilers
      - setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: cachix/install-nix-action@526118121621777ccd86f79b04685a9319637641 # v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: a1994sc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: (-source$|-go-modules$|.tar.gz$|-dist$)

      - name: Build updated package
        run: |-
          nix build .#${{ matrix.pkg }}
